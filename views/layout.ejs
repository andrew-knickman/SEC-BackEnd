<!DOCTYPE html>
<html>
<head>
    <title><%= typeof title == 'undefined' ? 'Towson SEC' : title %></title>

    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">


    <!--
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.

        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

    <!--STYLES-->
    <link rel="stylesheet" href="/styles/css/vendor/bootstrap/bootstrap-theme.css">
    <link rel="stylesheet" href="/styles/css/vendor/bootstrap/bootstrap.css">
    <link rel="stylesheet" href="/styles/custom.css">
    <link rel="stylesheet" href="/styles/importer.css">
    <!--STYLES END-->
</head>

<body>
<div class="navbar navbar-inverse navbar-fixed-top">
    <div class="container">
        <a class="navbar-brand" href="/"/>Software Engineering Club</a>
    </div>
</div>
<% if (session.authenticated) { %>
    <div id="admin_sidebar">
        <ul class="level-1">
            <li><a href="/">Site</a></li>
            <li><a href="#">TEST</a></li>
            <li class="user"><a href="#">User</a></li>
            <ul class="user level-2">
                <li><a href="/user/">View Users</a></li>
                <li><a href="/user/add">Add User</a></li>
            </ul>
            <li class="level-1 logout"><a href="/session/logout">Logout</a></li>
        </ul>
        <div id="admin_sidebar-btn">
            <span></span>
            <span></span>
            <span></span>
        </div>
    </div>
<% } %>
<%- body %>

<!--
    Client-side Templates
    ========================

    HTML templates are important prerequisites of modern, rich client applications.
    To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
    that you load these templates client-side.

    By default, your Gruntfile is configured to automatically load and precompile
    client-side JST templates in your `assets/templates` folder, then
    include them here automatically (between TEMPLATES and TEMPLATES END).

    To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
    For example, here are a few things you could do:

        + Import templates from other directories
        + Use a different template engine (handlebars, jade, dust, etc.)
        + Internationalize your client-side templates using a server-side
          stringfile before they're served.
-->

<!--TEMPLATES-->

<!--TEMPLATES END-->


<!--

  Client-side Javascript
  ========================

  You can always bring in JS files manually with `script` tags, or asynchronously
  on the client using a solution like AMD (RequireJS).  Or, if you like, you can
  take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

  By default, files in your `assets/js` folder are included here
  automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
  CoffeeScript (.coffee) are supported. In production, your scripts will be minified
  and concatenated into a single file.

  To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
  For example, here are a few things you could do:

      + Change the order of your scripts
      + Import scripts from other directories
      + Use a different preprocessor, like TypeScript

-->

<!--SCRIPTS-->
<script src="/js/dependencies/sails.io.js"></script>
<script src="/js/dependencies/jquery/jquery.js"></script>
<script src="/js/dependencies/jquery/jquery.validate.js"></script>
<script src="/js/formValidation.js"></script>
<script src="/js/style.js"></script>
<script src="/js/vendor/bootstrap/affix.js"></script>
<script src="/js/vendor/bootstrap/alert.js"></script>
<script src="/js/vendor/bootstrap/bootstrap.js"></script>
<script src="/js/vendor/bootstrap/button.js"></script>
<script src="/js/vendor/bootstrap/carousel.js"></script>
<script src="/js/vendor/bootstrap/collapse.js"></script>
<script src="/js/vendor/bootstrap/dropdown.js"></script>
<script src="/js/vendor/bootstrap/modal.js"></script>
<script src="/js/vendor/bootstrap/popover.js"></script>
<script src="/js/vendor/bootstrap/scrollspy.js"></script>
<script src="/js/vendor/bootstrap/tab.js"></script>
<script src="/js/vendor/bootstrap/tooltip.js"></script>
<script src="/js/vendor/bootstrap/transition.js"></script>
<!--SCRIPTS END-->
</body>
</html>
